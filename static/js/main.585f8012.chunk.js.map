{"version":3,"sources":["App.styled.js","components/Section/Section.styled.js","components/Section/Section.js","redux/contacts-actions.js","redux/contacts-selectors/ContactForm-selectors.js","components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.js","redux/contacts-selectors/ContactList-Filter-selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["MainTitle","styled","h1","MinorTitle","h2","Section","title","children","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","getItems","state","contacts","items","Form","form","Label","label","Input","input","Button","button","SubmitForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","target","value","reset","onSubmit","preventDefault","some","item","toast","error","htmlFor","type","onChange","pattern","required","getFilter","filter","getFilteredContacts","allContacts","getContacts","normilizedFilter","toLowerCase","record","includes","List","ul","ListItem","li","ContactList","map","onClick","onDeleteContact","FilterLabel","FilterInput","Filter","CreateApp","autoClose","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.585f8012.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const MinorTitle = styled.h2`\n  margin: 0;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 26px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MinorTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <MinorTitle>{title}</MinorTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filterContact = createAction('contacts/filter');\n\nconst contactsActions = { addContact, deleteContact, filterContact };\n\nexport default contactsActions;\n","export const getItems = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-left: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: auto;\n  height: 40px;\n  font-weight: normal;\n  font-size: 16px;\n  margin: 20px;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: dodgerblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  border: none;\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(39, 24, 245);\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from 'redux/contacts-actions';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { getItems } from '../../redux/contacts-selectors/ContactForm-selectors';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nexport default function SubmitForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (items.some(item => item.name === name)) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    } else {\n      dispatch(contactsActions.addContact(name, number));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  const normilizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(record =>\n    record.name.toLowerCase().includes(normilizedFilter),\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-basis: 1/3;\n  width: 30%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 20px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport contactsActions from 'redux/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getFilteredContacts } from '../../redux/contacts-selectors/ContactList-Filter-selectors';\nimport { List, ListItem } from 'components/ContactList/ContactList.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: 400;\n  font-size: 18px;\n  margin-top: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n`;\n","import React from 'react';\nimport contactsActions from 'redux/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getFilter } from '../../redux/contacts-selectors/ContactList-Filter-selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterLabel>\n      Find contacts by name{' '}\n      <FilterInput\n        type=\"text\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.filterContact(event.target.value))\n        }\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { ToastContainer } from 'react-toastify';\nimport { MainTitle } from './App.styled';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function CreateApp() {\n  return (\n    <>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: 'filter',\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from 'redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}